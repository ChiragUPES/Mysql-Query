Data->          Data is basically fact about the entity(real world object) that are recorded means that are stored somewhere. For example if we write in  notebook 
                this is also data.
Information->   The data which is useful to you at that time is information
Example->       If we find the location of train. Than we go into the railway portal and find the location of train. That is info rest all the details showing in 
                portal is data.
                
Database->      Database is a collection of information that is organized so that it can easily be accessed, managed or updated.

Meta-data->     Data about data. Like in which location file is present.

Attributes->    meta-data. Data required before creating the table like (Name, Location).

File V/S DBMS->                           FILE                       |            DBMS
                            1) Slow                                  | 1) Searching is fast
                            2) Meta-data required                    | 2) Meta-data is not required before searching any information.
                            3) Not efficient                         | 3) Memory Utilization is efficient.
                            4) No such protocol                      | 4) Lots of Constraint for data redundancy like Primary key Constraint.
                            5) No role based control                 | 5) Role based access control security protocol is implemented.
                            6) No security protocols.(Only login id, | 6) Security protocols are implemented.
                            pass is required to login)               |

Redundancy->    Duplicacy of data

Concurrency->   At a single time, multiple person can access the data.

Schema->        Logical representaion of database.

numeric datatype-> decimal(10,2)  //gives output after decimal upto 2 value
create table tablename(name varchar(50));
insert into table_name values('Chirag');

In()->                      In operator is used to determine the speicific value in a set.-> select * from table_name where city IN('Bombay','China');

Not in()->                  functoin makes sure that the expression proceeded does not have any of the values present in the argument.

order by ->                 keyword which sort the result-set in ascending order or descending order. //select * from table_name order by column_name asc/desc.
                            print the output by price*15 as new_price-> select sell_price*15 as new_price from table_name;

update ->                   update table_name set sell_price=150 where value=180;

delete ->                   delete from table_name where 

Like->                      like operator is used where we want to follow the specific pattern in a column. select name from client_master where city Like '_a%';

Between ->                  between operator selects a value with in the range. Between operator are inclusive. Both starting and end value are inclusive.

Aggerate function->         performing calculations on multiple rows of a single column and returing a single value. 5 fx. (count,sum,avg,min,max)
                            select min(sell_price) as min_price from product_master
Group by->  Basically makes the group of rows that have same value. For example if there a university table and there are different department in that table. And 
            we find the number of student in that department we can use group by.
having-> Having keyword is added into the sql because we can not use where keyword with aggregate functions. So, when we use group by and if we want to give condition
          so we can use having keyword.

diffrence bw char and varchar2-> Both of these datatype are used for character but varchar2 is used to store the string of variable length but char is used for fixed 
              length.
Case manipulation fx-> 1) Lower 2) Upper  3) INITCAP(First letter in upper case and rest in lower case).
View in sql-> these are kind of virtual table. It also has row and column like a real table.

How to define Primary Key-> Which uniquely defines the record in table.
                            It must contains the unique and not null value.
                            Syntax->  Column_name varchar(50) Primary Key Not Null.
                            
How to define Foreign Key-> basicaly used to link two tables.
                            Foreign key is a field in one table that refers to primary key of another table.
                            table containing foreign key is child key and another table is referenced or parent key.
                            If any record in referenced table (i.e. the table who contain primary key) is deleted, all the corresponding records in the 
                            referencing table will be deleted for the referential integrity. 
                            Syntax-> id int references CLient_master(roll),  //dono ka datatype same hai
                            
Referntial integrity->      Concept in a database that is used to build and maintain logical relationship between tables .
                            The main concept is that it does not allow to add any record in a table that contains the foreign key  unless the value present in 
                            primary key table.
                            
Data Constraint->           restriction over the table
                            limit the type of data which can go in the table
                            This ensure the accuracy and reliablity of the data in databse.
                            1) Not null -> ensure that column can not have null values                          // Not NULL
                            2) Default-> provide the null value for a column when none value is specified.      // Default 'F'
                            3) Unique-> ensures that all values are different                                   // id Unique Not NULL(Better use Primary Key)
                            4) Primary Key-> uniqely identify each row/record in table.                         // Primary Key
                            5) Check-> all the value in the column satisfy certain conditions.                  // check(Sales_man Like 'S%'), 
                                                                                                                   check(Sales_man >0), 
                                                                                                                   check(Sales_man IN('MAN','Women')), 
                                                                                                                   check(Sales_man Not In('F'))
                                                                                                                   CHECK (ISNUMERIC ( StNumber ))
                            6) index-> used to create and retrive data from the database very quickly.
                            
alter->                     modify to tables structure.
                            can drop ,add or postioning of column
                            Drop a column->           alter table table_name drop column_name;
                            Add a column->            alter table table_name ADD EMP_ID int;
                            Add column after that->   alter table table_name add emp_id int after roll;
                            Modify ->                 alter table table_name modify column_name varchar(30);
                            Table name changed->      alter table practice to practice2;
                            Rename column->           alter table practice rename column id to roll;
                            Add Primary key->         alter table practice add primary key(roll_no);
                            Add Foreign Key->         alter table practice add constraints ck Foreign Key(column_name)  references  Client_master(client_no);
                            Drop Primary Key->        alter table practice drop primary key;
                            Drop Foreign KEy->        alter table practice drop Constraint CK;// constraint name.
                            
drop table->                drop table table_name.


Difference B/w Delete, Drop, Truncate
                                            Delete                                |         Drop                                   |      Truncate  
                            1) Used when we want to delete row of table.          |   1) used when we want to delete whole table   |  1) Same as we use delete command as 
                            2) Table structure is not affected.                   |   2) Table structue is afected                 |     the only difference is that it 
                            3) Syntax-> delete from table_name;                  |   3) Syntax-> drop table table_name;           |     delete all the record in one move.
                            4) If we delete particular row than we can Use        |   4) We can not rollback.                      |  2) Faster than delete.
                               condition using where                              |                                                |  3) Table Structure maintained
                            5) We can rollback.(Logs are maintained in it.)       |                                                |  4) We can not rollback.
                                                                                                                                      5) truncate tablename;

Note:
1) There is only one primary key in a table as it will form clustered index.
2) 

Transaction -> means any change in the database.
ACID property-> It is concept of transaction processing. And it has 4 properties.
                Atomicity means either entire transaction takes place or nothing will take place.
                Consistency-> means data must be consistence before and after the transaction.
                Isolation -> multipe transaction can occur withour interpting the other one.
                Durablility-> all the changes which are done is permanently stored in database.
Key is an attribute using which we can identified a row in a table.
Primary Key-> It is the column or the group of column in a table that uniquely identifies row.
Candidate Key-> minimal set of atributes using which identify tuple.
Super Key-> If we add any attribute with the ck it will become super key.
Foreign key-> It is used to create a relationship bw the table. The purpose of foreign key is to maintain the data integrity.


                
Normalization-> technique used to reduce a redundancy in a table. Redundancy can be row level or column level. In row level there are multiple rows having same value.
                So, if we want to reduce the row level duplicacy than we can use the concept of Primary Key That means value should not be null and should  be 
                unique. Talking about column level duplicacy . Suppose there is the table name student which contains information about student and the course which 
                he is studying and the faculty who is teaching  the course. 
                SID   Sname     Cid       Cname         FID     FNAME     FSal
                1      Ram       C1        DBMS         F1      John      5000
                
                
                In the column level we can see the anomaly(means problem occur at certain time).
                1) Insertion Anomoly-> As student table also contains inforation about the course. So, if in future university introduced new course.Than we can 
                   not add into the table beacause student id is a primary key and no new student is enrolled in it.
                2) Deletion anomoly-> Suppose there is only one student enroll in certain course. And he is also opting out from the course. So if we delete that 
                   student record we also lost the information regarding the course.
                3) Updation anomoly-> In student table, there is faculty information also present and if we want to update the salary of faculty than we have to 
                   update the salary in each and every record where that faculty entry is there.
                   So, to avoid column level duplicacy we can divide the table into multiple table.
                   SID,Sname
                   Cid,Cname
                   Fid,Fname
                
                1NF-> Table should not contains any multivalued attribute.
                Given table-> Rollno      name    Course
                                1         Ram       C/C++
                                2         Harsh     JAva
                                3         Omkar     C/Dbms
                                
                 1NF will be-> Rollno     name      Course
                                  1        Ram        C
                                  1        Ram        C++
                                  2        Harsh    Java
                                  3         Omkar     C
                                  3         Omkar     Dbms
                  Here Rollno+Course will be primary key. which is also known as composite primary key.
                  We can also detemine table into 2 tables
                          |  Rollno    Name  |      Rollno    Course
                          |  1         Ram   |        1         C
                          |  2         Harsh |        1         C++
                          |  3         Omkar |        2         Dbms
                          | _________________|        3         Java
                 So, Here Roll no would be primary key in the first table and in the second table Rollno will be foreign key which are refrences to primary key
                 of first table.
                 Note : Foreign key can not be null. As we are refrencing something and it will be null than we may lose data integrity.
                        Foreign key can contain duplicate value.
                        
                 Closure Method-> This method is used to find all the Candidate Key
                 Prime attribute-> Attribute which is used to make CK.
                 Functional Dependency defines the relationship bw the attributes.
                 Example-> R(ABCDE)
                          FD-> {A->B,BC->D,E->C,D->A}
                          Check which value is on the right side.B,D,C,A. So remainining element E must be in the CK.
                          E+=EC
                          AE+=AEBCD
                          BE+=
                          CE+=
                          DE+=
                 
                2NF-> Should be in 1NF.Partial dependency not allowed .Means all the non-prime attribute should not be partially dependent on CK. It should be
                      fully depeendent on CK.
                3NF-> 2NF+Transitive depandency not allowed. means non-prime atribute should not depend upon non-prime value.
                BCNF(BoyCode normal form) 3NF+ Left side must be super key or super key.
                Decomposition means to reduce redundancy , anamoly from database we divide a table into multiple tables.
                Loseless Decomposition is basically when we reconstruct the decomposed table using joins than information will not lose.
                Losesy Decomposition We are loosing the information when we reconstruct the decomposed data.

Joins-> Joins is used when we have to combine the rows from two or more table. But there should be one common column in both the table using which we can join the
        table.
Types of joins->  Inner, Left-Outer,Right-Outer,Full-Outer Joins,Self join 
Inner Join-> Inner joins return the records that have matching values in both the tables.
              Synatx-> Select column_name from table1 inner join table2 on table1.column_name=table2.column_name.
              Syntax-> SELECT Orders.OrderID, Customers.CustomerName, Shippers.ShipperName FROM ((Orders
                       INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID)
                       INNER JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID); 
              
              
Left Outer Join-> Return all the record from the left table and the matched record from the right table.
                  Syntax-> SELECT column_name(s) FROM table1 LEFT JOIN table2 ON table1.column_name = table2.column_name;

Right Outer Join-> Return all the record from the right table and matched the record from left table.
                  Syntax->  SELECT column_name(s) FROM table1 RIGHT JOIN table2 ON table1.column_name = table2.column_name;

Full Outer Join-> Union of both left+right.
                  Syntax-> SELECT column_name(s) FROM table1 FULL OUTER JOIN table2 ON table1.column_name = table2.column_name WHERE condition; 

Self Join-> Self join is a join in which table joined with itself.                  
                  Syntax-> SELECT column_name(s) FROM table1 T1, table1 T2 WHERE condition;  
                            select t1.cid from Study as t1,study as t2 where t1.sid==t2.sid and t1.cid<>t2.cid;
Index-> An index is a datastructure that improves the speed of data retrival operation on database. It is used to reduce the no. of calls on the hard-drive for 
        searching of data.

Find maximum average salary-> select max(avg_salary) from (select worker_id, avg(salary) AS avg_salary group by);
Find difference of max value and min value-> SELECT MAX(salary) - MIN(salary) DIFFERENCE FROM employees;
Monthly sales record-> select year(order_date),month(order_date),sum(sale) from sales group by year(order_date),month(order_date)                            
                            
                            
           
